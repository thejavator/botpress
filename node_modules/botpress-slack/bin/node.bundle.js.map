{"version":3,"sources":["webpack:///webpack/bootstrap c711669894d3d40ef7fe","webpack:///./src/index.js","webpack:///external \"botpress-version-manager\"","webpack:///./src/outgoing.js","webpack:///./src/actions.js","webpack:///external \"bluebird\"","webpack:///external \"lodash\"","webpack:///./src/umm.js","webpack:///external \"util\"","webpack:///./src/slack.js","webpack:///external \"@slack/client\"","webpack:///./src/incoming.js","webpack:///external \"lru-cache\"","webpack:///./src/users.js","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"axios\""],"names":["slack","outgoingMiddleware","event","next","platform","type","module","exports","config","apiToken","default","env","botToken","clientID","clientSecret","hostname","verificationToken","scope","init","bp","__dirname","middlewares","register","name","order","handler","description","forIn","action","sendName","replace","method","msg","apply","arguments","sendOutgoing","id","getUserProfile","getUsers","getChannels","getTeam","getData","ready","configurator","loadAll","router","getRouter","test","req","originalUrl","getStatus","connected","isConnected","setConfigAndRestart","newConfigs","saveAll","setConfig","connect","get","res","json","post","body","query","then","user","channels","handlePromise","promise","_resolve","catch","err","_reject","handleText","channelId","raw","text","options","sendText","handleUpdateText","ts","sendUpdateText","handleAttachments","attachments","sendAttachments","handleUpdateAttachments","sendUpdateAttachments","handleDeleteTextOrAttachments","sendDeleteTextOrAttachments","handleReaction","sendReaction","handleRemoveReaction","sendRemoveReaction","create","resolve","reject","r","rj","messageId","Date","toISOString","Math","random","newEvent","Object","assign","_promise","__id","obj","validateChannelId","Error","validateText","validateAttachments","createText","createAttachments","createReaction","createUpdateText","createUpdateAttachments","createDeleteTextOrAttachments","createRemoveReaction","getChannelId","getMessageTs","processOutgoing","blocName","instruction","ins","optionsList","pick","prop","isNil","attachment","reaction","timestamp","channel","strRep","inspect","at","umm","registerConnector","args","templates","Slack","rtm","file","file_comment","validateConnection","validateOptions","validateBeforeSending","fromCallback","web","chat","postMessage","cb","update","delete","validateBeforeReaction","reactions","add","remove","data","userId","find","matchesProperty","url","ok","users","members","console","log","rtmToken","removeAllListeners","disconnect","on","RTM","AUTHENTICATED","rtmStartData","logger","info","RTM_CONNECTION_OPENED","start","self","getChannelsFromAPI","team","getRTMToken","connectRTM","connectWebclient","OTHER_RTM_EVENTS","mentionRegex","RegExp","messagesCache","max","maxAge","isButtonAction","payload","message_ts","isFromBot","bot_id","subtype","getBotId","preprocessEvent","mid","has","alreadyProcessed","set","getOrFetchUserProfile","extractBasics","direct","isDirect","isBotMentioned","match","exec","mentionedId","JSON","parse","token","action_type","action_text","actions","selected_options","sendIncoming","profile","real_name","callback_id","action_ts","button","status","end","handleRtmMessage","message","bot_mentioned","user_mentioned","handleRtmReactionAdded","event_ts","handleRtmTypingAdded","typing","user_id","map","rtmEvent","handleOtherRTMevent","Promise","require","path","fs","filename","join","dataLocation","loadUserProfiles","existsSync","readFileSync","saveUserProfiles","profiles","content","stringify","writeFileSync","debug","userProfiles","cacheTs","db","saveUser","gender","timezone","tz_offset","locale","picture_url","img_512","first_name","last_name","return"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/slvn/Desktop/botpress-slack\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c711669894d3d40ef7fe","import checkVersion from 'botpress-version-manager'\n\nimport outgoing from './outgoing'\nimport actions from './actions'\n\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport UMM from './umm'\nimport Slack from './slack'\n\nlet slack = null\n\nconst outgoingMiddleware = (event, next) => {\n  if (event.platform !== 'slack') {\n    return next()\n  }\n\n  if (!outgoing[event.type]) {\n    return next('Unsupported event type: ' + event.type)\n  }\n\n  outgoing[event.type](event, next, slack)\n}\n\nmodule.exports = {\n\n  config: {\n    apiToken: { type: 'string', default: '', env: 'SLACK_API_TOKEN' },\n    botToken: { type: 'string', default: '', env: 'SLACK_BOT_TOKEN' },\n    clientID: { type: 'string', default: '', env: 'SLACK_CLIENT_ID' },\n    clientSecret: { type: 'string', default: '', env: 'SLACK_CLIENT_SECRET' },\n    hostname: { type: 'string', default: '', env: 'SLACK_HOST' },\n    verificationToken: { type: 'string', default: '', env: 'SLACK_VERIFICATION_TOKEN' },\n    scope: { type: 'string', default: 'admin,bot,chat:write:bot,commands,identify,incoming-webhook,channels:read', env: 'SLACK_SCOPE' }\n  },\n\n  init(bp) {\n    \n    checkVersion(bp, __dirname)\n\n    bp.middlewares.register({\n      name: 'slack.sendMessages',\n      type: 'outgoing',\n      order: 100,\n      handler: outgoingMiddleware,\n      module: 'botpress-slack',\n      description: 'Sends out messages that targets platform = slack.' +\n      ' This middleware should be placed at the end as it swallows events once sent.'\n    })\n\n    bp.slack = {}\n    _.forIn(actions, (action, name) => {\n      bp.slack[name] = actions[name]\n      let sendName = name.replace(/^create/, 'send')\n      bp.slack[sendName] = Promise.method(function() {\n        var msg = action.apply(this, arguments)\n        return bp.middlewares.sendOutgoing(msg)\n      })\n    })\n\n    // Set up endpoints as internal functions\n    bp.slack['getUserProfile'] = function(id) {\n      return slack.getUserProfile(id)\n    }\n\n    bp.slack['getUsers'] = function() {\n      return slack.getUsers()\n    }\n\n    bp.slack['getChannels'] = function() {\n      return slack.getChannels()\n    }\n\n    bp.slack['getTeam'] = function() {\n      return slack.getTeam()\n    }\n\n    bp.slack['getData'] = function() {\n      return slack.getData()\n    }\n\n    UMM(bp) // Initializes Slack in the UMM\n  },\n\n  ready: async function(bp, configurator) {\n\n    const config = await configurator.loadAll()\n\n    slack = new Slack(bp, config)\n\n    const router = bp.getRouter('botpress-slack', { 'auth': req => !/\\/action-endpoint/i.test(req.originalUrl) })\n\n    const getStatus = () => ({\n      connected: slack.isConnected()\n    })\n\n    const setConfigAndRestart = async newConfigs => {\n      await configurator.saveAll(newConfigs)\n      slack.setConfig(newConfigs)\n      slack.connect(bp)\n    }\n\n    slack.connect(bp)\n\n    router.get('/config', async (req, res) => {\n      res.json(await configurator.loadAll())\n    })\n\n    router.post('/config', async (req, res) => {\n      setConfigAndRestart(req.body)\n      res.json(await configurator.loadAll())\n    })\n\n    router.get('/status', (req, res) => {\n      res.json(getStatus())\n    })\n\n    router.get('/user', (req, res) => {\n      slack.getUserProfile(req.query.id)\n      .then(user => {\n        res.json(user)\n      })\n    })\n\n    router.get('/users', (req, res) => {\n      res.json(slack.getUsers())\n    })\n\n    router.get('/channels', (req, res) => {\n      slack.getChannels()\n      .then(channels => {\n        res.json(channels)\n      })\n    })\n\n    router.get('/team', (req, res) => {\n      res.json(slack.getTeam())\n    })\n\n    router.get('/data', (req, res) => {\n      res.json(slack.getData())\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"botpress-version-manager\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botpress-version-manager\"\n// module id = 2\n// module chunks = 0","const handlePromise = (event, next, promise) => {\n  return promise.then(res => {\n    next()\n    event._resolve && event._resolve()\n    return res\n  })\n  .catch(err => {\n    next(err)\n    event._reject && event._reject(err)\n    throw err\n  })\n}\n\nconst handleText = (event, next, slack) => {\n  if (event.platform !== 'slack' || event.type !== 'text') {\n    return next()\n  }\n\n  const channelId = event.raw.channelId\n  const text = event.text\n  const options = event.raw.options\n\n  return handlePromise(event, next, slack.sendText(channelId, text, options))\n}\n\nconst handleUpdateText = (event, next, slack) => {\n  if (event.platform !== 'slack' || event.type !== 'update_text') {\n    return next()\n  }\n\n  const channelId = event.raw.channelId\n  const text = event.text\n  const options = event.raw.options\n  const ts = event.raw.ts\n  \n  return handlePromise(event, next, slack.sendUpdateText(ts, channelId, text, options))\n}\n\nconst handleAttachments = (event, next, slack) => {\n  if (event.platform !== 'slack' || event.type !== 'attachments') {\n    return next()\n  }\n\n  const channelId = event.raw.channelId\n  const attachments = event.raw.attachments\n  const options = event.raw.options\n\n  return handlePromise(event, next, slack.sendAttachments(channelId, attachments, options))\n}\n\nconst handleUpdateAttachments = (event, next, slack) => {\n  if (event.platform !== 'slack' || event.type !== 'update_attachments') {\n    return next()\n  }\n\n  const channelId = event.raw.channelId\n  const attachments = event.raw.attachments\n  const options = event.raw.options\n  const ts = event.raw.ts\n\n  return handlePromise(event, next, slack.sendUpdateAttachments(ts, channelId, attachments, options))\n}\n\nconst handleDeleteTextOrAttachments = (event, next, slack) => {\n  if (event.platform !== 'slack' || event.type !== 'delete_text_or_attachments') {\n    return next()\n  }\n\n  const channelId = event.raw.channelId\n  const options = event.raw.options\n  const ts = event.raw.ts\n\n  return handlePromise(event, next, slack.sendDeleteTextOrAttachments(ts, channelId, options))\n}\n\nconst handleReaction = (event, next, slack) => {\n  if (event.platform !== 'slack' || event.type !== 'reaction') {\n    return next()\n  }\n\n  const name = event.raw.name\n  const options = event.raw.options\n\n  return handlePromise(event, next, slack.sendReaction(name, options))\n}\n\nconst handleRemoveReaction = (event, next, slack) => {\n  if (event.platform !== 'slack' || event.type !== 'remove_reaction') {\n    return next()\n  }\n\n  const name = event.raw.name\n  const options = event.raw.options\n\n  return handlePromise(event, next, slack.sendRemoveReaction(name, options))\n}\n\nmodule.exports = {\n  'text': handleText,\n  'attachments': handleAttachments,\n  'reaction': handleReaction,\n  'update_text': handleUpdateText,\n  'update_attachments': handleUpdateAttachments,\n  'delete_text_or_attachments': handleDeleteTextOrAttachments,\n  'remove_reaction': handleRemoveReaction\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/outgoing.js","import Promise from 'bluebird'\n\nconst create = obj => {\n  let resolve = null\n  let reject = null\n  const promise = new Promise((r, rj) => {\n    resolve = r\n    reject = rj\n  })\n\n  const messageId = new Date().toISOString() + Math.random()\n  \n  const newEvent = Object.assign({\n    _promise: promise,\n    _resolve: resolve,\n    _reject: reject,\n    __id: messageId\n  }, obj)\n\n  return newEvent\n}\n\nconst validateChannelId = (channelId) => {\n  if (!/\\w+/.test(channelId)) {\n    throw new Error('Invalid channel id')\n  }\n}\n\nconst validateText = (text) => {\n  if (typeof(text) !== 'string') {\n    throw new Error('Text must be a string.')\n  }\n}\n\nconst validateAttachments = (attachments) => {\n  if (typeof(attachments) !== 'object') {\n    throw new Error('Expected attachments type to be an object')\n  }\n}\n\nconst createText = (channelId, text, options = {}) => {\n  validateChannelId(channelId)\n  validateText(text)\n\n  return create({\n    platform: 'slack',\n    type: 'text',\n    text: text,\n    raw: {\n      channelId: channelId,\n      options: options\n    }\n  })\n}\n\nconst createAttachments = (channelId, attachments, options = {}) => {\n  validateChannelId(channelId)\n  validateAttachments(attachments)\n\n  return create({\n    platform: 'slack',\n    type: 'attachments',\n    text: 'App sent an attachments',\n    raw: {\n      channelId: channelId,\n      attachments: attachments,\n      options: options\n    }\n  })\n}\n\nconst createReaction = (name, options = {}) => {\n  return create({\n    platform: 'slack',\n    type: 'reaction',\n    text: 'App sent a reaction',\n    raw: {\n      name: name,\n      options: options\n    }\n  })\n}\n\nconst createUpdateText = (ts, channelId, text, options = {}) => {\n  validateChannelId(channelId)\n  validateText(text)\n\n  return create({\n    platform: 'slack',\n    type: 'update_text',\n    text: text,\n    raw: {\n      channelId: channelId,\n      ts: ts,\n      options: options\n    }\n  })\n} \n\nconst createUpdateAttachments = (ts, channelId, attachments, options = {}) => {\n  validateChannelId(channelId)\n  validateAttachments(attachments)\n\n  return create({\n    platform: 'slack',\n    type: 'update_attachments',\n    text: 'App updated an attachments',\n    raw: {\n      channelId: channelId,\n      attachments: attachments,\n      ts: ts,\n      options: options\n    }\n  })\n}\n\nconst createDeleteTextOrAttachments = (ts, channelId, options = {}) => {\n  validateChannelId(channelId)\n\n  return create({\n    platform: 'slack',\n    type: 'delete_text_or_attachments',\n    text: 'App deleted a text or an attachments',\n    raw: {\n      channelId: channelId,\n      ts: ts,\n      options: options\n    }\n  })\n}\n\nconst createRemoveReaction = (name, options = {}) => {\n  return create({\n    platform: 'slack',\n    type: 'remove_reaction',\n    text: 'App remove a reaction',\n    raw: {\n      name: name,\n      options: options\n    }\n  })\n}\n\nmodule.exports = {\n  createText,\n  createAttachments,\n  createReaction,\n  createUpdateText,\n  createUpdateAttachments,\n  createDeleteTextOrAttachments,\n  createRemoveReaction\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 6\n// module chunks = 0","import util from 'util'\nimport _ from 'lodash'\n\nimport actions from './actions'\n\nfunction getChannelId(event) {\n  const channelId = _.get(event, 'channel.id')\n    || _.get(event, 'user.channelId')\n    || _.get(event, 'channelId')\n    || _.get(event, 'raw.channelId')\n    || _.get(event, 'raw.channel.id')\n    || _.get(event, 'raw.channel')\n\n  if (!channelId) {\n    throw new Error('Could not find channelId in the incoming event.')\n  }\n\n  return channelId\n}\n\nfunction getMessageTs(event) {\n  const ts = _.get(event, 'ts')\n    || _.get(event, 'raw.ts')\n\n  if (!ts) {\n    throw new Error('Could not find message timestamp (ts) in the incoming event.')\n  }\n\n  return ts\n}\n\nfunction processOutgoing({ event, blocName, instruction }) {\n  const ins = Object.assign({}, instruction) // Create a shallow copy of the instruction\n\n  ////////\n  // PRE-PROCESSING\n  ////////\n  \n  const optionsList = []\n\n  const options = _.pick(instruction, optionsList)\n  \n  for (let prop of optionsList) {\n    delete ins[prop]\n  }\n\n  /////////\n  /// Processing\n  /////////\n  \n  if (!_.isNil(instruction.attachments)) {\n    return actions.createAttachments(getChannelId(event), instruction.attachments, instruction.options)\n  }\n\n  if (!_.isNil(instruction.attachment)) {\n    return actions.createAttachments(getChannelId(event), [instruction.attachment], instruction.options)\n  }\n\n  if (!_.isNil(instruction.text)) {\n    return actions.createText(getChannelId(event), instruction.text, instruction.options)\n  }\n\n  if (!_.isNil(instruction.reaction)) {\n    return actions.createReaction(instruction.reaction, Object.assign({}, {\n      timestamp: getMessageTs(event),\n      channel: getChannelId(event)\n    }, instruction.options))\n  }\n\n  ////////////\n  /// POST-PROCESSING\n  ////////////\n  \n  // Nothing to post-process yet\n\n  ////////////\n  /// INVALID INSTRUCTION\n  ////////////\n\n  const strRep = util.inspect(instruction, false, 1)\n  throw new Error(`Unrecognized instruction on Slack in bloc '${blocName}': ${strRep}`)\n}\n\nmodule.exports = bp => {\n  const [umm, registerConnector] = _.at(bp, ['umm', 'umm.registerConnector'])\n\n  umm && registerConnector && registerConnector({\n    platform: 'slack',\n    processOutgoing: args => processOutgoing(Object.assign({}, args, { bp })),\n    templates: []\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 8\n// module chunks = 0","import { RtmClient, CLIENT_EVENTS, WebClient } from '@slack/client'\nimport incoming from './incoming'\n\nimport axios from 'axios'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\n\nclass Slack {\n  constructor(bp, config) {\n\n    if (!bp || !config) {\n      throw new Error('You need to specify botpress and config')\n    }\n\n    this.rtm = null\n    this.config = config\n    this.connected = false\n  }\n\n  setConfig(config) {\n    this.config = config\n  }\n\n  validateConnection() {\n    if (!this.connected) {\n      throw new Error('You are not connected...')\n    }\n  }\n\n  validateText(text) {\n    const type = typeof(text)\n    if ( type !== 'string') {\n      throw new Error('Text format is not valid (actual: ' + type + ', required: string)')\n    }\n  }\n\n  validateChannelId(channelId) {\n    const type = typeof(channelId)\n    if ( type !== 'string') {\n      throw new Error('Channel id format is not valid (actual: ' + type + ', required: string)')\n    }\n  }\n\n  validateAttachments(attachments) {\n    const type = typeof(attachments)\n    if ( type !== 'object') {\n      throw new Error('Attachments format is not valid (actual: ' + type + ', required: object)')\n    }\n  }\n\n  validateOptions(options) {\n    const type = typeof(options)\n    if ( type !== 'object') {\n      throw new Error('Options format is not valid (actual: ' + type + ', required: object)')\n    }\n  }\n\n  validateBeforeReaction (options) {\n    if (!(options.file || options.file_comment || options.channel || options.timestamp)) {\n      throw new Error('You need to set at least a destination options (file, file_comment, channel, timestamp)...')\n    }\n  }\n\n  validateBeforeSending(channelId, options) {\n    this.validateConnection()\n    this.validateChannelId(channelId)\n    this.validateOptions(options)\n  }\n\n  sendText(channelId, text, options) {\n    this.validateBeforeSending(channelId, options)\n    this.validateText(text)\n\n    return Promise.fromCallback(cb => {\n      this.web.chat.postMessage(channelId, text, options, cb)\n    })\n  }\n\n  sendUpdateText(ts, channelId, text, options) {\n    this.validateBeforeSending(channelId, options)\n    this.validateText(text)\n\n    return Promise.fromCallback(cb => {\n      this.web.chat.update(ts, channelId, text, options, cb)\n    })\n  }\n\n  sendDeleteTextOrAttachments(ts, channelId, options) {\n    this.validateBeforeSending(channelId, options)\n\n    return Promise.fromCallback(cb => {\n      this.web.chat.delete(ts, channelId, options, cb)\n    })\n  }\n\n  sendAttachments(channelId, attachments, options) {\n    this.validateBeforeSending(channelId, options)\n    this.validateAttachments(attachments)\n  \n    return Promise.fromCallback(cb => {\n      this.web.chat.postMessage(channelId, null, {\n        attachments,\n        ...options\n      }, cb)\n    })\n  }\n\n  sendUpdateAttachments(ts, channelId, attachments, options ) {\n    this.validateBeforeSending(channelId, options)\n    this.validateAttachments(attachments)\n\n    return Promise.fromCallback(cb => {\n      this.web.chat.update(ts, channelId, null, {\n        attachments,\n        ...options\n      }, cb)\n    })\n  }\n\n  sendReaction(name, options) {\n    this.validateConnection()\n    this.validateBeforeReaction(options)\n\n    return Promise.fromCallback(cb => {\n      this.web.reactions.add(name, options, cb)\n    })\n  }\n\n  sendRemoveReaction(name, options) {\n    this.validateConnection()\n    this.validateBeforeReaction(options)\n\n    return Promise.fromCallback(cb => {\n      this.web.reactions.remove(name, options, cb)\n    })\n  }\n\n  isConnected() {\n    return this.connected\n  }\n\n  getData() {\n    return this.data\n  }\n\n  getUserProfile(userId) {\n    const user = _.find(this.getUsers(), _.matchesProperty('id', userId))\n\n    if (user !== 'undefined') return Promise.resolve(user)\n\n    const url = 'https://slack.com/api/users.list' +\n      '?token=' + this.config.apiToken\n\n    return axios.get(url)\n    .then(({data}) => {\n      if (!data.ok) {\n        throw new Error('Error getting user profile:' + userId )\n      }\n\n      this.data.users = data.members\n\n      return _.find(data.members, _.matchesProperty('id', userId))\n    })\n    .catch(err => console.log(`Error getting user profile: ${err}`))\n  } \n\n  connectRTM(bp, rtmToken) {\n    if (this.rtm) {\n      this.rtm.removeAllListeners()\n      this.disconnect()\n    }\n\n    this.rtm = new RtmClient(rtmToken)\n\n    this.rtm.on(CLIENT_EVENTS.RTM.AUTHENTICATED, (rtmStartData) => {\n      bp.logger.info('slack connector is authenticated')\n      this.data = rtmStartData\n    })\n\n    this.rtm.on(CLIENT_EVENTS.RTM.RTM_CONNECTION_OPENED, () => {\n      bp.logger.info('slack connector is connected')\n      \n      if (!this.connected) {\n        this.connected = true\n        incoming(bp, this)\n      }  \n    })\n\n    this.rtm.start()\n  }\n\n  connectWebclient(apiToken) {\n    this.web = new WebClient(apiToken)\n  }\n\n  getRTMToken() {\n    const botToken = this.config.botToken\n    return botToken ? botToken : this.config.apiToken\n  }\n\n  getBotId() {\n    return this.data && this.data.self.id\n  }\n\n  getBotName() {\n    return this.data && this.data.self.name\n  }\n\n  getChannelsFromAPI() {\n    const url = 'https://slack.com/api/channels.list' + '?token=' + this.config.apiToken\n    return axios.get(url).then(({data}) => {\n\n      if (!data.ok) {\n        throw new Error('Error getting channels:' + data)\n      }\n\n      return data.channels\n    })\n  }\n\n  getChannels() {\n    if (!/channels:read/.test(this.config.scope)) {\n      return Promise.resolve(this.data.channels)\n    }\n\n    return this.getChannelsFromAPI()\n  }\n\n  getTeam() {\n    return this.data && this.data.team\n  }\n\n  getUsers() {\n    return this.data && this.data.users\n  }\n\n  connect(bp) {\n    const rtmToken = this.getRTMToken()\n\n    if (!rtmToken) return\n\n    this.connectRTM(bp, rtmToken)\n    this.connectWebclient(rtmToken)\n  }\n\n  disconnect() {\n    this.rtm.disconnect()\n  }\n}\n\nmodule.exports = Slack\n\n\n\n// WEBPACK FOOTER //\n// ./src/slack.js","module.exports = require(\"@slack/client\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@slack/client\"\n// module id = 10\n// module chunks = 0","import { RTM_EVENTS } from '@slack/client'\n\nimport LRU from 'lru-cache'\nimport _ from 'lodash'\nimport Users from './users'\n\nconst OTHER_RTM_EVENTS = [\n  'ACCOUNTS_CHANGED',\n  'BOT_ADDED',\n  'BOT_CHANGED',\n  'CHANNEL_ARCHIVE',\n  'CHANNEL_CREATED',\n  'CHANNEL_DELETED',\n  'CHANNEL_HISTORY_CHANGED',\n  'CHANNEL_JOINED',\n  'CHANNEL_LEFT',\n  'CHANNEL_MARKED',\n  'CHANNEL_RENAME',\n  'CHANNEL_UNARCHIVE',\n  'COMMANDS_CHANGED',\n  'DND_UPDATED',\n  'DND_UPDATED_USER',\n  'EMAIL_DOMAIN_CHANGED',\n  'EMOJI_CHANGED',\n  'FILE_CHANGE',\n  'FILE_COMMENT_ADDED',\n  'FILE_COMMENT_DELETED',\n  'FILE_COMMENT_EDITED',\n  'FILE_CREATED',\n  'FILE_DELETED',\n  'FILE_PUBLIC',\n  'FILE_UNSHARED',\n  'GOODBYE',\n  'GROUP_ARCHIVE',\n  'GROUP_CLOSE',\n  'GROUP_HISTORY_CHANGED',\n  'GROUP_JOINED',\n  'GROUP_LEFT',\n  'GROUP_MARKED',\n  'GROUP_OPEN',\n  'GROUP_RENAME',\n  'GROUP_UNARCHIVE',\n  'HELLO',\n  'IM_CLOSE',\n  'IM_CREATED',\n  'IM_HISTORY_CHANGED',\n  'IM_MARKED',\n  'IM_OPEN',\n  'MANUAL_PRESENCE_CHANGE',\n  'PIN_ADDED',\n  'PIN_REMOVED',\n  'PREF_CHANGE',\n  'PRESENCE_CHANGE',\n  'REACTION_REMOVED',\n  'RECONNECT_URL',\n  'STAR_ADDED',\n  'STAR_REMOVED',\n  'SUBTEAM_CREATED',\n  'SUBTEAM_SELF_ADDED',\n  'SUBTEAM_SELF_REMOVED',\n  'SUBTEAM_UPDATED',\n  'TEAM_DOMAIN_CHANGE',\n  'TEAM_JOIN',\n  'TEAM_MIGRATION_STARTED',\n  'TEAM_PLAN_CHANGE',\n  'TEAM_PREF_CHANGE',\n  'TEAM_PROFILE_CHANGE',\n  'TEAM_PROFILE_DELETE',\n  'TEAM_PROFILE_REORDER',\n  'TEAM_RENAME',\n  'USER_CHANG'\n]\n\nconst mentionRegex = new RegExp(/<@(\\w+)>/gi)\n\nmodule.exports = (bp, slack) => {\n\n  const users = Users(bp, slack)\n\n  const messagesCache = LRU({\n    max: 10000,\n    maxAge: 60 * 60 * 1000\n  })\n\n  const isButtonAction = payload => {\n    return payload.message_ts ? true : false\n  }\n\n  const isFromBot = event => {\n    if (event.bot_id || event.subtype) {\n      return true\n    }\n    if (event.user === slack.getBotId()) {\n      return true\n    }\n\n    return false\n  }\n\n  const preprocessEvent = payload => {\n\n    let userId = payload.user\n\n    if (isButtonAction(payload)) {\n      userId = payload.user.id\n    }\n\n    const mid = `${payload.channel}_${payload.user}_${payload.ts}`\n\n    if (mid && !messagesCache.has(mid)) {\n      // We already processed this message\n      payload.alreadyProcessed = true\n    } else {\n      // Mark it as processed\n      messagesCache.set(mid, true)\n    }\n\n    return users.getOrFetchUserProfile(userId)\n  }\n\n  const extractBasics = (event) => {\n    return {\n      platform: 'slack',\n      channel: { id: event.channel },\n      ts: event.ts,\n      direct: isDirect(event.channel),\n      raw: event\n    }\n  }\n\n  const isDirect = (channelId) => {\n    return /^D/.test(channelId)\n  }\n\n  const isBotMentioned = (text) => {\n    let match = [];\n    while (match = mentionRegex.exec(text)) {\n      const mentionedId = match[1];\n      if (mentionedId === slack.getBotId()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  const router = bp.getRouter('botpress-slack', { 'auth': req => !/\\/action-endpoint/i.test(req.originalUrl) })\n\n  router.post('/action-endpoint', (req, res) => {\n\n    const payload = JSON.parse(req.body.payload)\n\n    if (!slack.isConnected()) {\n      throw new Error('You are not connected and authenticated')\n    }\n\n    if (payload.token !== slack.config.verificationToken) {\n      throw new Error('Verification token are not matching')\n    }\n\n    preprocessEvent(payload)\n    .then(user => {\n      // Check if this is a button or a menu action\n      let action_type = 'button'\n      let action_text = ' clicked on a button'\n      if (payload.actions[0].selected_options) {\n        action_type = 'menu'\n        action_text = ' selected a menu option'\n      }\n\n      bp.middlewares.sendIncoming({\n        platform: 'slack',\n        type: 'action',\n        text: user.profile.real_name + action_text,\n        user: user,\n        channel: payload.channel,\n        action: payload.actions[0],\n        action_type: action_type,\n        callback_id: payload.callback_id,\n        ts: payload.message_ts,\n        action_ts: payload.action_ts,\n        direct: isDirect(payload.channel.id),\n        raw: payload\n      })\n\n      // DEPRECATED for 1.0\n      bp.middlewares.sendIncoming({\n        platform: 'slack',\n        type: 'button',\n        text: user.profile.real_name + ' clicked on a button',\n        user: user,\n        channel: payload.channel,\n        button: payload.actions[0],\n        callback_id: payload.callback_id,\n        ts: payload.message_ts,\n        direct: isDirect(payload.channel.id),\n        raw: payload\n      })\n\n    })\n    \n    res.status(200).end()\n  })\n\n\n  slack.rtm.on(RTM_EVENTS['MESSAGE'], function handleRtmMessage(message) {\n\n    if (isFromBot(message)) return\n\n    preprocessEvent(message)\n    .then(user => {\n\n      bp.middlewares.sendIncoming({\n        type: 'message',\n        text: message.text,\n        user: user,\n        bot_mentioned: isBotMentioned(message.text),\n        ...extractBasics(message)\n      })\n\n      let match = []\n      while (match = mentionRegex.exec(message.text)) {\n        const mentionedId = match[1]\n        if (mentionedId === slack.getBotId()) {\n          bp.middlewares.sendIncoming({\n            type: 'bot_mentioned',\n            bot_mentioned: true,\n            text: 'Bot has been mentioned',\n            user: user,\n            mentionedId: mentionedId,\n            ...extractBasics(message)\n          })\n        } else {\n          bp.middlewares.sendIncoming({\n            type: 'user_mentioned',\n            user_mentioned: true,\n            text: 'User has been mentioned',\n            user: user,\n            mentionedId: mentionedId,\n            ...extractBasics(message)\n          })\n        }\n      }   \n    })\n  })\n\n  slack.rtm.on(RTM_EVENTS['REACTION_ADDED'], function handleRtmReactionAdded(reaction) {\n    \n    if (isFromBot(reaction)) return\n\n    preprocessEvent(reaction)\n    .then(user => {\n      bp.middlewares.sendIncoming({\n        type: 'reaction',\n        user: user,\n        text: user.profile.real_name + ' reacted using ' + reaction.reaction,\n        reaction: reaction.reaction,\n        ...extractBasics(reaction),\n        ts: reaction.event_ts\n      })\n    })\n  })\n\n  slack.rtm.on(RTM_EVENTS['USER_TYPING'], function handleRtmTypingAdded(typing) {\n    \n    if (isFromBot(typing)) return\n\n    preprocessEvent(typing)\n    .then(user => {\n      bp.middlewares.sendIncoming({\n        type: 'typing',\n        user: user,\n        text: user.profile.real_name + ' is typing',\n        ...extractBasics(typing)\n      })\n    })\n  })\n\n  slack.rtm.on(RTM_EVENTS['FILE_SHARED'], function handleRtmTypingAdded(file) {\n\n    if (isFromBot(file)) return\n    \n    users.getOrFetchUserProfile(file.user_id)\n    .then(user => {\n      bp.middlewares.sendIncoming({\n        platform: 'slack',\n        type: 'file',\n        user: user,\n        text: user.profile.real_name + ' shared a file',\n        file: file.file,\n        ts: file.event_ts,\n        raw: file\n      })\n    })\n  })\n\n\n  OTHER_RTM_EVENTS.map((rtmEvent) => {\n    slack.rtm.on(RTM_EVENTS[rtmEvent], function handleOtherRTMevent(event) {\n\n      bp.middlewares.sendIncoming({\n        platform: 'slack',\n        type: event.type,\n        text: 'An another type of event occured',\n        raw: event\n      })  \n    })\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/incoming.js","module.exports = require(\"lru-cache\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lru-cache\"\n// module id = 12\n// module chunks = 0","/**\n *\n * User info helper.\n *\n * This helper provides following methods:\n *\n *   - getOrFetchUserProfile: given `userId` return a promise of user data (with cache)\n *\n * Data users' profiles will be cached in `${bp.dataLocation}/botpress-slack.profiles.json`\n *\n */\n\nconst Promise = require('bluebird')\nconst path = require('path')\nconst fs = require('fs')\n\nmodule.exports = function(bp, slack) {\n\n  const filename = path.join(\n    bp.dataLocation,\n    'botpress-slack.profiles.json'\n    )\n\n  const loadUserProfiles = () => {\n    if (fs.existsSync(filename)) {\n      return JSON.parse(fs.readFileSync(filename))\n    }\n    return {}\n  }\n\n  const saveUserProfiles = (profiles) => {\n    const content = JSON.stringify(profiles)\n    fs.writeFileSync(filename, content)\n    bp.logger.debug('slack: saved user profiles to disk')\n  }\n\n  const userProfiles = loadUserProfiles()\n  let cacheTs = new Date()\n\n  return {\n    getOrFetchUserProfile: Promise.method((userId) => {\n      if (userProfiles[userId]) {\n        return userProfiles[userId]\n      }\n\n      return slack.getUserProfile(userId)\n      .then((user) => {\n        user.id = userId\n        userProfiles[userId] = user\n\n        if (new Date() - cacheTs >= 10000) {\n          saveUserProfiles(userProfiles)\n          cacheTs = new Date()\n        }\n\n        return bp.db.saveUser({\n          id: user.id,\n          platform: 'slack',\n          gender: 'unknown',\n          timezone: user.tz_offset / 3600,\n          locale: 'en',\n          picture_url: user.profile.img_512,\n          first_name: user.profile.first_name,\n          last_name: user.profile.last_name\n        }).return(user)\n      })\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/users.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}