{"version":3,"sources":["webpack:///webpack/bootstrap 648651c6ed2f66bc48fc","webpack:///./src/index.js","webpack:///external \"util\"","webpack:///external \"lodash\"","webpack:///external \"bluebird\"","webpack:///./src/umm.js"],"names":["outgoingTypes","parseTyping","msg","raw","typing","isNaN","Math","max","outgoingMiddleware","event","next","platform","includes","type","extractSocketId","to","user","id","length","Error","inspect","indexOf","split","getOrCreateUser","bp","Object","assign","from","__userId","__socketId","socketId","events","emit","delay","_promise","_resolve","users","usersCount","uniqueId","random","substr","first_name","last_name","profile_pic","db","saveUser","getUserById","userId","find","startNewSession","module","exports","config","init","configurator","middlewares","register","name","order","handler","description","ready","loadAll","on","message","metadata","get","sendIncoming","text","getUserId","PromisifyEvent","resolve","reject","_reject","processOutgoing","blocName","instruction","ins","optionsList","options","pick","prop","isNil","strRep","at","umm","registerConnector","args","templates"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 648651c6ed2f66bc48fc","import util from 'util'\n\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport umm from './umm'\n\nconst outgoingTypes = ['text']\n\nconst parseTyping = msg => {\n  if (msg.raw && !!msg.raw.typing) {\n    if (isNaN(msg.raw.typing)) {\n      return 1000\n    } else {\n      return Math.max(msg.raw.typing, 500)\n    }\n  }\n\n  return false\n}\n\nconst outgoingMiddleware = bp => async (event, next) => {\n  if (event.platform !== 'web') {\n    return next()\n  }\n\n  if (!_.includes(outgoingTypes, event.type)) {\n    return next('Unsupported event type: ' + event.type)\n  }\n\n  // TODO Currently this will broadcast to all sockets\n  // TODO We must target a single socket / client\n\n  const extractSocketId = () => {\n    let to = (event.raw && event.raw.to) || (event.user)\n\n    if (to && to.id) {\n      to = to.id\n    }\n\n    if (!to || !to.length) {\n      next(new Error(\"Could not find who to send this message to: \" + util.inspect(event)))\n    }\n\n    if (to.indexOf(':') >= 0) {\n      to = to.split(':')[1]\n    }\n\n    if (to.indexOf('+') >= 0) {\n      to = to.split('+')[0]\n    }\n\n    return to\n  }\n\n  let user = await getOrCreateUser(bp, extractSocketId())\n\n  const msg = Object.assign({}, event, {\n    from: 'bot',\n    bp: null,\n    __userId: user.id,\n    __socketId: user && user.socketId // send back only to the sender\n  })\n\n  const typing = parseTyping(msg)\n\n  if (typing) {\n    bp.events.emit('modules.web.typing', msg)\n    await Promise.delay(typing)\n  }\n\n  bp.events.emit('modules.web.message', msg)\n\n  if (msg._promise && msg._resolve) {\n    msg._resolve()\n  }\n}\n\nconst users = {}\nlet usersCount = 0\n\nconst getOrCreateUser = async (bp, socketId) => {\n  if (!users[socketId]) {\n\n    const uniqueId = socketId + '+' + (`${Math.random()}`.substr(2, 5))\n    users[socketId] = {\n      first_name: 'Anonymous',\n      last_name: '#' + usersCount++,\n      profile_pic: 'http://350cr.blogs.brynmawr.edu/files/2013/05/anonymous.jpg', // TODO Remove that\n      socketId: socketId,\n      id: uniqueId,\n      platform: 'web'\n    }\n\n    await bp.db.saveUser(users[socketId])\n  }\n\n  return users[socketId]\n}\n\nconst getUserById = (userId) => {\n  return _.find(users, { id: userId })\n}\n\nconst startNewSession = (bp, socketId) => {\n  delete users[socketId]\n  return getOrCreateUser(bp, socketId)\n}\n\nmodule.exports = {\n\n  config: { },\n\n  init: async function(bp, configurator) {\n    bp.middlewares.register({\n      name: 'web.sendMessages',\n      type: 'outgoing',\n      order: 100,\n      handler: outgoingMiddleware(bp),\n      module: 'botpress-web',\n      description: 'Sends out messages that targets platform = web.' +\n      ' This middleware should be placed at the end as it swallows events once sent.'\n    })\n\n    umm(bp) // Initialize UMM\n  },\n\n  ready: async function(bp, configurator) {\n    // Your module's been loaded by Botpress.\n    // Serve your APIs here, execute logic, etc.\n\n    const config = await configurator.loadAll()\n    \n    bp.events.on('modules.web.message', async (message, from, metadata) => {\n      if (!message) {\n        return\n      }\n\n      // Discard messages emited from the bot itself.\n      if (_.get(message, 'from') === 'bot') {\n        return\n      }\n\n      // If there's no client identifier, discard the event (should never happen)\n      if (!(metadata && metadata.socketId)) {\n        return\n      }\n\n      const user = await getOrCreateUser(bp, metadata.socketId)\n\n      // TODO Support more types like attachment\n      bp.middlewares.sendIncoming({\n        platform: 'web',\n        type: 'message',\n        user: user,\n        text: message.text,\n        raw: message\n      })\n    })\n\n    bp.events.on('modules.web.new_session', async (message, from, metadata) => {\n      if (!(metadata && metadata.socketId)) {\n        return\n      }\n\n      const user = await startNewSession(bp, metadata.socketId)\n\n      const event = {\n        from: 'bot',\n        userId: user.id,\n        __socketId: user && user.socketId // send back only to the sender\n      }\n\n      bp.events.emit('modules.web.session_started', event)\n    })\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 4\n// module chunks = 0","import util from 'util'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\n// TODO Extract this logic directly to botpress's UMM\nfunction getUserId(event) {\n  const userId = _.get(event, 'user.id')\n    || _.get(event, 'user.userId')\n    || _.get(event, 'userId')\n    || _.get(event, 'raw.from')\n    || _.get(event, 'raw.userId')\n    || _.get(event, 'raw.user.id')\n\n  if (!userId) {\n    throw new Error('Could not find userId in the incoming event.')\n  }\n\n  return userId\n}\n\nfunction PromisifyEvent(event) {\n  if (!event._promise) {\n    event._promise = new Promise((resolve, reject) => {\n      event._resolve = resolve\n      event._reject = reject\n    })\n  }\n\n  return event\n}\n\nfunction processOutgoing({ event, blocName, instruction }) {\n  const ins = Object.assign({}, instruction) // Create a shallow copy of the instruction\n\n  ////////\n  // PRE-PROCESSING\n  ////////\n  \n  const optionsList = ['typing']\n\n  const options = _.pick(instruction, optionsList)\n  \n  for (let prop of optionsList) {\n    delete ins[prop]\n  }\n\n  /////////\n  /// Processing\n  /////////\n\n  if (!_.isNil(instruction.text)) {\n    const user = getUserId(event)\n\n    return PromisifyEvent({\n      platform: 'web',\n      type: 'text',\n      user: { id: user },\n      raw: Object.assign({ to: user, message: instruction.text }, options),\n      text: instruction.text\n    })\n  }\n\n  ////////////\n  /// POST-PROCESSING\n  ////////////\n  \n  // Nothing to post-process yet\n\n  ////////////\n  /// INVALID INSTRUCTION\n  ////////////\n\n  const strRep = util.inspect(instruction, false, 1)\n  throw new Error(`Unrecognized instruction on Web in bloc '${blocName}': ${strRep}`)\n}\n\nmodule.exports = bp => {\n  const [umm, registerConnector] = _.at(bp, ['umm', 'umm.registerConnector'])\n\n  umm && registerConnector && registerConnector({\n    platform: 'web',\n    processOutgoing: args => processOutgoing(Object.assign({}, args, { bp })),\n    templates: []\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm.js"],"sourceRoot":""}